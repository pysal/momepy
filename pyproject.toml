[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[project]
name = "momepy"
dynamic = ["version"]
authors = [
    { name = "Martin Fleischmann", email = "martin@martinfleischmann.net" },
]
maintainers = [{ name = "momepy contributors" }]
license = { text = "BSD 3-Clause" }
description = "Urban Morphology Measuring Toolkit"
keywords = ["urban morphology", "urban morphometrics", "tessellation"]
readme = { text = """\
Momepy (Morphological Measuring in Python) is a library for
quantitative analysis of urban form - urban morphometrics. It is
part of `PySAL`_ (Python Spatial Analysis Library) and is built on top
of `GeoPandas`_, other PySAL modules, and
`networkX`_.

.. _PySAL: http://pysal.org
.. _GeoPandas: http://geopandas.org
.. _networkX : http://networkx.github.io
""", content-type = "text/x-rst" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.10"
dependencies = [
    "geopandas>=0.12.0",
    "libpysal>=4.12.0",
    "networkx>=2.8",
    "packaging",
    "pandas>=1.5.1",
    "shapely>=2",
    "tqdm>=4.63.0",
]

[project.urls]
Home = "http://momepy.org"
Repository = "https://github.com/pysal/momepy"

[project.optional-dependencies]
plus = [
    "numba",
    "inequality",
    "mapclassify",
    "esda",
]

[tool.setuptools.packages.find]
include = ["momepy", "momepy.*"]

[tool.setuptools.package-data]
momepy = ["datasets/bubenec.gpkg", "datasets/tests.gpkg"]

[tool.ruff]
line-length = 88
lint.select = ["E", "F", "W", "I", "UP", "N", "B", "A", "C4", "SIM", "ARG"]
lint.ignore = ["B006", "SIM108"]
include = ["*.py", "*.ipynb"]


[tool.ruff.lint.per-file-ignores]
"*__init__.py" = ["F403"]
"momepy/tests/*" = ["N802", "N806"]
"benchmarks/*" = ["ARG002", "N802", "N806"]

[tool.coverage.run]
source = ['momepy']

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "except ModuleNotFoundError:",
    "except ImportError",
]
ignore_errors = true
omit = ["tests/*", "docs/conf.py", "benchmarks/*"]
